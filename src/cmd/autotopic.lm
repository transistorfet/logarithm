
$module_info = {
	'help' => [
		"Usage: autotopic on|off",
		"Description: Activates the autotopic setter which displays a message after a certain length of time"
	]
};

my @autotopic_list = ();

sub do_autotopic {
	local($irc, $msg, $privs) = @_;

	return(-10) if ($privs < channel_get_option($irc->{'channels'}, $msg->{'respond'}, "autotopic_access", 100));

	if ($msg->{'params'}->[1] eq "on") {
		return(-1) if (module_register_alarm("autotopic", "do_autotopic_alarm", $msg->{'respond'}, 604800, $msg));
		irc_private_msg($irc, $msg->{'respond'}, "Autotopic On");
	}
	elsif ($msg->{'params'}->[1] eq "off") {
		return(-1) if (module_unregister_alarm("autotopic", "do_autotopic_alarm", $msg->{'respond'}));
		irc_private_msg($irc, $msg->{'respond'}, "Autotopic Off");
	}
}

sub do_autotopic_alarm {
	local($irc, $msg, $privs) = @_;

	unless (scalar(@autotopic_list)) {
		@autotopic_list = csv_search($msg->{'respond'}, "chantopics.lst", ':', undef);
		return unless (scalar(@autotopic_list));
		$i = scalar(@autotopic_list);
		irc_notice($irc, "transistor", "Loaded $i topics");
	}

	my $topic = shift(@autotopic_list)->[0];	
	irc_send_msg($irc, "PRIVMSG chanserv :topic $msg->{'respond'} $topic\n");
}
